#!/bin/bash

source ~/lab/scripts/calls/sourceall

parentSessionName="$1"
parentPaneName="$2"

#echo "$parentSessionName:$parentPaneName"

# Function to create a temporary pane
function create_temp_pane() {

  pane_id=$(tmux split-window -v -l 30 -d "$1")
  echo $pane_id

}


function create_temp_pane_parent() {

#  local tempPaneOutput="tmux -T \"$parentSessionName:$parentPaneName\" split-window -v -l 30 -d \"$1\"\; select-pane -D \;"
  local tempPaneOutput="tmux -T \"$parentSessionName:$parentPaneName\" split-window -v -d \"$1\"\; select-pane -D \;"
  pecho "$tempPaneOutput"
  echo "$tempPaneOutput" > /tmp/tmuxcallback

}

# Function to close a temporary pane
function close_temp_pane() {
    tmux killpane -t $1
}

# Interactive Menu
choice=$(echo -e "tdefault\njot\nnote\ndo\nhtop\nsession" | fzf --height 40% --reverse --border)

case $choice in
  "tdefault")
    tmuxdefault=$(ls -1 ~/lab/scripts/tmuxp/ | fzf --height 40% --reverse --border)
    tmuxdefault=$(echo "$tmuxdefault" | sed 's/.yaml//')
    echo "$tmuxdefault" > ~/.tmuxdefault
#    close_temp_pane $pane_id
    exit
    ;;
  "jot")
    jotNotes=$(ls -1 /tmp/nap-* | fzf --height 40% --reverse --border)
    create_temp_pane_parent "nvim $jotNotes"
    ;;
  "note")
    fullpathFilename=$(mnote -createonly "$parentPaneName")
    pecho "popup $parentSessionName $parentPaneName $fullpathFilename"
    create_temp_pane_parent "nvim $fullpathFilename"
#    choice=$(echo -e "$fullpathFilename" | fzf --height 40% --reverse --border)
    ;;
  "do")
    create_temp_pane_parent "nvim ~/.todo"
    ;;
  "htop")
    pane_id=$(create_temp_pane "htop")
    ;;
  "session")
    sessions=$(tmux list-sessions -F "#{session_name}")
    selected_session=$(echo "$sessions" | fzf --height=50 --reverse --border --prompt="Select tmux session: ")
#    pane_id=$(create_temp_pane "htop")
    
    # If a session was selected, attach to it
    if [ -n "$selected_session" ]; then
        tmux switch-client -t "$selected_session"
    fi
    ;;
esac

if [[ $pane_id ]]; then
  close_temp_pane $pane_id
fi

# no way to exit after session so just leaving and using command escape to close
#zsh
#tmux kill-session -t "scratch"
#tmux send-keys "exit" C-m
#sleep 2
#exit
